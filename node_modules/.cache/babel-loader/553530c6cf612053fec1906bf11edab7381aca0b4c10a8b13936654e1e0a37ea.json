{"ast":null,"code":"var _jsxFileName = \"/Users/emgr2104/invatat/personal-website/my-website/src/header/CvComponent.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CvComponent = () => {\n  //   const handleDownload = () => {\n  //     // Perform any necessary actions before downloading the file\n  //     // For example, fetch the file from the server\n  //     fetch(\"http://localhost:8009/cv\")\n  //       .then((response) => {\n  //         // Check if response is successful\n  //         if (!response.ok) {\n  //           throw new Error(\"Network response was not ok\");\n  //         }\n  //         // Return blob data\n  //         return response.blob();\n  //       })\n  //       .then((blob) => {\n  //         // Create a temporary URL for the blob\n  //         const url = window.URL.createObjectURL(new Blob([blob]));\n  //         // Create a temporary anchor element\n  //         const a = document.createElement(\"a\");\n  //         // Set the URL and download attribute for the anchor\n  //         a.href = url;\n  //         a.download = \"cv.docx\"; // Set the desired filename and extension\n  //         // Programmatically click the anchor element to trigger the download\n  //         a.click();\n  //         // Cleanup: Revoke the temporary URL\n  //         window.URL.revokeObjectURL(url);\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"There was a problem with the fetch operation:\", error);\n  //       });\n  //   };\n  const handleDownload = () => {\n    // Construct the URL for the document file\n    const fileUrl = process.env.PUBLIC_URL + \"/cv/cv.docx\";\n\n    // Create an anchor element\n    const anchor = document.createElement(\"a\");\n    anchor.href = fileUrl;\n    anchor.download = \"document.doc\"; // Set the filename for the downloaded file\n    anchor.click();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: handleDownload,\n      children: \"Download Cv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CvComponent;\nexport default CvComponent;\nvar _c;\n$RefreshReg$(_c, \"CvComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CvComponent","handleDownload","fileUrl","process","env","PUBLIC_URL","anchor","document","createElement","href","download","click","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emgr2104/invatat/personal-website/my-website/src/header/CvComponent.js"],"sourcesContent":["import React from \"react\";\n\nconst CvComponent = () => {\n  //   const handleDownload = () => {\n  //     // Perform any necessary actions before downloading the file\n  //     // For example, fetch the file from the server\n  //     fetch(\"http://localhost:8009/cv\")\n  //       .then((response) => {\n  //         // Check if response is successful\n  //         if (!response.ok) {\n  //           throw new Error(\"Network response was not ok\");\n  //         }\n  //         // Return blob data\n  //         return response.blob();\n  //       })\n  //       .then((blob) => {\n  //         // Create a temporary URL for the blob\n  //         const url = window.URL.createObjectURL(new Blob([blob]));\n  //         // Create a temporary anchor element\n  //         const a = document.createElement(\"a\");\n  //         // Set the URL and download attribute for the anchor\n  //         a.href = url;\n  //         a.download = \"cv.docx\"; // Set the desired filename and extension\n  //         // Programmatically click the anchor element to trigger the download\n  //         a.click();\n  //         // Cleanup: Revoke the temporary URL\n  //         window.URL.revokeObjectURL(url);\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"There was a problem with the fetch operation:\", error);\n  //       });\n  //   };\n  const handleDownload = () => {\n    // Construct the URL for the document file\n    const fileUrl = process.env.PUBLIC_URL + \"/cv/cv.docx\";\n\n    // Create an anchor element\n    const anchor = document.createElement(\"a\");\n    anchor.href = fileUrl;\n    anchor.download = \"document.doc\"; // Set the filename for the downloaded file\n    anchor.click();\n  };\n\n  return (\n    <>\n      {/* Add an onClick event handler to trigger the download */}\n      <a onClick={handleDownload}>Download Cv</a>\n    </>\n  );\n};\n\nexport default CvComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,aAAa;;IAEtD;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAC1CF,MAAM,CAACG,IAAI,GAAGP,OAAO;IACrBI,MAAM,CAACI,QAAQ,GAAG,cAAc,CAAC,CAAC;IAClCJ,MAAM,CAACK,KAAK,CAAC,CAAC;EAChB,CAAC;EAED,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eAEEf,OAAA;MAAGgB,OAAO,EAAEZ,cAAe;MAAAW,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBAC3C,CAAC;AAEP,CAAC;AAACC,EAAA,GA/CIlB,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}